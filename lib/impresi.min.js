!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("impresi",[],e):"object"==typeof exports?exports.impresi=e():t.impresi=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=3)}([function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.board=e.board,this.options=n,this.element=null,n.id&&(this.id=n.id)}var e,n,r;return e=t,(n=[{key:"addElement",value:function(t){this.element=document.createElement(t),this.board.appendChild(this.element)}}])&&o(e.prototype,n),r&&o(e,r),t}();e.default=r,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(2))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t,n){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n))).defaultInAnimationName="slideInUp",o}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.options.width&&(this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.style.overflow="hidden"),this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor),this.options.inAnimationName=null!=this.options.inAnimationName?this.options.inAnimationName:this.defaultInAnimationName}},{key:"setChildOptions",value:function(t){t.style.fontSize="".concat(this.getFontSize(),"vw"),this.options.fontColor&&(t.style.color=this.options.fontColor)}},{key:"getFontSize",value:function(){return null!=this.options.fontSize?this.options.fontSize:this.defaultFontSize}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t,n){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n)),n.x||(o.options.x="10"),n.y||(o.options.y="10"),o}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.element.style.left="".concat(this.options.x,"vw"),this.element.style.top="".concat(this.options.y,"vh")}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";(function(o){var r,i,u,a=h(n(5)),s=h(n(6)),c=h(n(7)),l=h(n(8)),f=h(n(9)),p=h(n(10)),d=n(11);function h(t){return t&&t.__esModule?t:{default:t}}function y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function b(t){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}u=function(){return function(){var t=function(){function t(e,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),!e)throw new Error("ID for board is required");if(this.board=document.querySelector("#"+e),!this.board)throw new Error("No HTML element with the ID: "+e);this.options=o,this.groups=[],this.screenIndex=0,this.index=0,n&&this.addResources(n),this.init()}var e,n,o;return e=t,(n=[{key:"init",value:function(){this.getStyles(),this.setListeners(),this.displayLoader()}},{key:"setListeners",value:function(){var t=this,e=this;document.body.onkeyup=function(n){32!==n.keyCode&&40!==n.keyCode&&39!==n.keyCode&&13!==n.keyCode||t.index<t.groups.length-1&&(e.next(),t.screenIndex++,window.location.hash="screen".concat(t.screenIndex)),38!==n.keyCode&&37!==n.keyCode||t.index>0&&e.previous(e.index===e.groups.length-1)}}},{key:"getStyles",value:function(){var t=document.createElement("style");t.type="text/css",t.innerHTML=d.styles,this.board.appendChild(t),(t=document.createElement("style")).type="text/css",t.innerHTML='@import url("https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css");',this.board.appendChild(t)}},{key:"displayLoader",value:function(){var t=document.createElement("div");t.classList.add("overlay");var e=document.createElement("div");e.innerHTML="<div></div><div></div>",e.classList.add("lds-ripple"),t.appendChild(e),document.body.appendChild(t)}},{key:"createBackground",value:function(t){return new a.default(this,t)}},{key:"createHeading",value:function(t,e){return new s.default(this,t,e)}},{key:"createBlurb",value:function(t,e){return new c.default(this,t,e)}},{key:"createImage",value:function(t,e){return new p.default(this,t,e)}},{key:"addActions",value:function(t){return t.out&&this.addGroup("out",t),t.in&&this.addGroup("in",t),this}},{key:"addGroup",value:function(t,e){var n=[];e[t].forEach(function(t){var e=new f.default(t);n.push(e)});var o=new l.default(t,n);this.groups.push(o)}},{key:"next",value:function(){var t=this.groups[this.index];if("out"===t.actionName){if(!t.actions.length)throw new Error("No actions provided.");t.stop(),this.increment(),this.next()}else t.run(),this.index<this.groups.length-1&&this.increment()}},{key:"previous",value:function(t){if(1!==this.index){t||this.decrement();var e=this.groups[this.index];if("in"===e.actionName){if(!e.actions.length)throw new Error("No actions provided.");e.stop(),t?(this.decrement(),this.previous(!0)):this.previous(this.index===this.groups.length-1)}else e.run(),this.screenIndex--,window.location.hash="screen".concat(this.screenIndex)}}},{key:"start",value:function(){if(!this.groups.length)throw new Error("No groups of actions have been added yet.");if(window.location.hash){var t=window.location.hash;if(t.match("^#screen[0-9]+$")){var e=t.match("[0-9]+");if(e&&(this.screenIndex=parseInt(e[0])),this.screenIndex>0&&this.screenIndex<=this.groups.length/2+1)for(var n=0;n<this.screenIndex;n++)this.next();else this.screenIndex=1,window.location.hash="screen1",this.next()}}else this.next(),this.screenIndex++,window.location.hash="screen1";document.querySelector(".overlay").classList.add("hide")}},{key:"increment",value:function(){this.index!==this.groups.length-1&&this.index++}},{key:"decrement",value:function(){this.index>0&&this.index--}},{key:"addResources",value:function(t){var e=this;if(!t.resources)throw new Error("No resources exist in the data.");var n=[];t.resources.forEach(function(t){if(!t.type)throw new Error("All items must have a type.");if(!t.id)throw new Error("All items must have an id.");switch(t.options||(t.options={}),t.options.id=t.id,t.type){case"background":n.push(e.createBackground(t.options));break;case"heading":n.push(e.createHeading(t.text,t.options));break;case"blurb":n.push(e.createBlurb(t.text,t.options));break;case"image":n.push(e.createImage(t.src,t.options));break;default:return}}),t.actions.forEach(function(t){for(var o in t)t.hasOwnProperty(o)&&function(){var r={};r[o]=[],t[o].forEach(function(t){for(var e=0;e<n.length;e++){var i=n[e];if(i.id==t){r[o].push(i);break}}}),e.addActions(r)}()})}}])&&y(e.prototype,n),o&&y(e,o),t}();return o.Impresi=t,t}()},"object"===b(e)&&void 0!==t?t.exports=u():void 0===(i="function"==typeof(r=u)?r.call(e,n,e,t):r)||(t.exports=i)}).call(this,n(4))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,o))).addElement("div"),n}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){if(s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.element.classList.add("background","item"),this.options.imageUrl){var n=document.createElement("img");n.src=this.options.imageUrl,this.element.appendChild(n)}else this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor)}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,r))).text=n,o.zIndex=1,o.defaultFontSize=2,o.addElement("div"),o}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.element.classList.add("heading","item");var n=document.createElement("h1");this.element.style.zIndex=this.zIndex,n.innerHTML=this.text,s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,r))).text=n,o.zIndex=2,o.defaultFontSize=1.5,o.addElement("div"),o}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.classList.add("blurb","item"),this.element.style.zIndex=this.zIndex;var n=document.createElement("p");n.innerHTML=this.text,s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.actionName=e,this.actions=n}var e,n,r;return e=t,(n=[{key:"run",value:function(){this.actions.forEach(function(t){t.run(),0})}},{key:"stop",value:function(){this.actions.forEach(function(t){t.stop(),0})}}])&&o(e.prototype,n),r&&o(e,r),t}();e.default=r,t.exports=e.default},function(t,e,n){"use strict";function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.item=e,this.inAnimationName=null!=this.item.options.inAnimationName?e.options.inAnimationName:"fadeIn",this.outAnimationName=null!=e.options.outAnimationName?e.options.outAnimationName:"fadeOut"}var e,n,r;return e=t,(n=[{key:"run",value:function(){this.item.element.classList.remove("hide"),this.item.element.classList.remove(this.outAnimationName),this.item.element.classList.add("animated",this.inAnimationName)}},{key:"stop",value:function(){this.item.element.classList.remove("animated",this.inAnimationName),this.item.element.classList.add(this.outAnimationName),this.item.element.classList.add("hide")}}])&&o(e.prototype,n),r&&o(e,r),t}();e.default=r,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,r=(o=n(2))&&o.__esModule?o:{default:o};function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function u(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function a(t,e){return!e||"object"!==i(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function s(t,e,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(n):r.value}})(t,e,n||t)}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var f=function(t){function e(t,n,o){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,o))).defaultInAnimationName="slideInUp",r.src=n,r.zIndex=1,r.addElement("img"),r}var n,o,i;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(e,r.default),n=e,(o=[{key:"addElement",value:function(t){s(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"addElement",this).call(this,t),this.options.width&&(this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.style.overflow="hidden"),this.options.inAnimationName=null!=this.options.inAnimationName?this.options.inAnimationName:this.defaultInAnimationName,this.element.classList.add("image","item"),this.element.style.zIndex=this.zIndex,this.element.src=this.src}}])&&u(n.prototype,o),i&&u(n,i),e}();e.default=f,t.exports=e.default},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.styles=void 0;e.styles='\nbody {\n  margin: 0;\n  text-align: center;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nh1,\np {\n  font-family: "Montserrat", sans-serif;\n}\n\n.item {\n  visibility: hidden;\n}\n\n.animated {\n  visibility: visible;\n}\n\n.hide {\n  display: none;\n}\n\n.background {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n}\n\n.background img {\n  flex-shrink: 0;\n  min-width: 100%;\n  min-height: 100%;\n}\n\n.heading,\n.blurb,\n.background,\n.image {\n  position: absolute;\n  background-color: #333;\n}\n\n.heading,\n.blurb {\n  padding: 15px;\n}\n\n.heading h1 {\n  font-size: 2.4em;\n}\n\n.blurb p {\n  font-size: 1.4em;\n}\n\n.heading h1,\n.blurb p {\n  margin: 0;\n  color: #fff;\n}\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background-color: #333;\n  width: 100vw;\n  height: 100vh;\n}\n\n.lds-ripple {\n  display: inline-block;\n  position: fixed;\n  top: 40vh;\n  left: calc(50vw - 32px);\n  width: 64px;\n  height: 64px;\n}\n.lds-ripple div {\n  position: absolute;\n  border: 4px solid #fff;\n  opacity: 1;\n  border-radius: 50%;\n  animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n}\n.lds-ripple div:nth-child(2) {\n  animation-delay: -0.5s;\n}\n@keyframes lds-ripple {\n  0% {\n    top: 28px;\n    left: 28px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: -1px;\n    left: -1px;\n    width: 58px;\n    height: 58px;\n    opacity: 0;\n  }\n}\n\n\n@media only screen and (max-width: 600px) {\n  .heading,\n  .blurb,\n  .image {\n    position: static;\n    display: block;\n  }\n\n  .image {\n    width: 100vw;\n    max-width: 100vw !important;\n  }\n\n  .heading h1 {\n    font-size: 5vw;\n  }\n\n  .blurb p {\n    font-size: 4vw;\n  }\n}\n'}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,