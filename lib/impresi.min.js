!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("impresi",[],t):"object"==typeof exports?exports.impresi=t():e.impresi=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function r(e,t,n){return(r="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=i(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.board=t.board,this.options=n,this.element,r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"defaultInAnimationName",this),n.id&&(this.id=n.id)}var t,n,i;return t=e,(n=[{key:"addElement",value:function(e){this.element=document.createElement(e),this.board.appendChild(this.element),this.options.inAnimationName=null!=this.options.inAnimationName?this.options.inAnimationName:this.defaultInAnimationName}}])&&o(t.prototype,n),i&&o(t,i),e}();t.default=u,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(2))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=f(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t,n,o){return(s="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(e,t,n,o){var r,i=f(e,t);if(i){if((r=Object.getOwnPropertyDescriptor(i,t)).set)return r.set.call(o,n),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(o,t)){if(!r.writable)return!1;r.value=n,Object.defineProperty(o,t,r)}else!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(o,t,n);return!0})(e,t,n,o)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n)),function(e,t,n,o,r){if(!s(e,t,n,o||e)&&r)throw new Error("failed to set property")}(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"defaultInAnimationName","slideInUp",o),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.options.width&&(this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.style.overflow="hidden"),this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor)}},{key:"setChildOptions",value:function(e){e.style.fontSize="".concat(this.getFontSize(),"vw"),this.options.fontColor&&(e.style.color=this.options.fontColor)}},{key:"getFontSize",value:function(){return null!=this.options.fontSize?this.options.fontSize:this.defaultFontSize}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=d,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n)),n.x||(o.options.x="10"),n.y||(o.options.y="10"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.style.left="".concat(this.options.x,"vw"),this.element.style.top="".concat(this.options.y,"vh")}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";(function(o){var r,i,u,a=y(n(5)),c=y(n(6)),l=y(n(7)),s=y(n(8)),f=y(n(9)),p=y(n(10)),d=n(11);function y(e){return e&&e.__esModule?e:{default:e}}function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}u=function(){return function(){var e=function(){function e(t,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("ID for board is required");if(this.board=document.querySelector("#"+t),!this.board)throw new Error("No HTML element with the ID: "+t);this.options=o,this.groups=[],this.screenIndex=0,this.index=0,n&&this.addResources(n),this.init()}var t,n,o;return t=e,(n=[{key:"init",value:function(){this.getStyles(),this.setListeners(),this.displayLoader()}},{key:"setListeners",value:function(){var e=this,t=this;document.body.onkeyup=function(n){32!==n.keyCode&&40!==n.keyCode&&39!==n.keyCode&&13!==n.keyCode||e.index<e.groups.length-1&&(t.next(),e.screenIndex++,window.location.hash="screen".concat(e.screenIndex)),38!==n.keyCode&&37!==n.keyCode||e.index>0&&t.previous(t.index===t.groups.length-1)}}},{key:"getStyles",value:function(){var e=document.createElement("style");e.type="text/css",e.innerHTML=d.styles,this.board.appendChild(e),(e=document.createElement("style")).type="text/css",e.innerHTML='@import url("https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css");',this.board.appendChild(e)}},{key:"displayLoader",value:function(){var e=document.createElement("div");e.classList.add("overlay");var t=document.createElement("div");t.innerHTML="<div></div><div></div>",t.classList.add("lds-ripple"),e.appendChild(t),document.body.appendChild(e)}},{key:"createBackground",value:function(e){return new a.default(this,e)}},{key:"createHeading",value:function(e,t){return new c.default(this,e,t)}},{key:"createBlurb",value:function(e,t){return new l.default(this,e,t)}},{key:"createImage",value:function(e,t){return new p.default(this,e,t)}},{key:"addActions",value:function(e){return e.out&&this.addGroup("out",e),e.in&&this.addGroup("in",e),this}},{key:"addGroup",value:function(e,t){var n=[];t[e].forEach(function(e){var t=new f.default(e);n.push(t)});var o=new s.default(e,n);this.groups.push(o)}},{key:"next",value:function(){var e=this.groups[this.index];if("out"===e.actionName){if(!e.actions.length)throw new Error("No actions provided.");e.stop(),this.increment(),this.next()}else e.run(),this.index<this.groups.length-1&&this.increment()}},{key:"previous",value:function(e){if(1!==this.index){e||this.decrement();var t=this.groups[this.index];if("in"===t.actionName){if(!t.actions.length)throw new Error("No actions provided.");t.stop(),e?(this.decrement(),this.previous(!0)):this.previous(this.index===this.groups.length-1)}else t.run(),this.screenIndex--,window.location.hash="screen".concat(this.screenIndex)}}},{key:"start",value:function(){if(!this.groups.length)throw new Error("No groups of actions have been added yet.");if(window.location.hash){var e=window.location.hash;if(e.match("^#screen[0-9]+$")){var t=e.match("[0-9]+");if(t&&(this.screenIndex=parseInt(t[0])),this.screenIndex>0&&this.screenIndex<=this.groups.length/2+1)for(var n=0;n<this.screenIndex;n++)this.next();else this.screenIndex=1,window.location.hash="screen1",this.next()}}else this.next(),this.screenIndex++,window.location.hash="screen1";document.querySelector(".overlay").classList.add("hide")}},{key:"increment",value:function(){this.index!==this.groups.length-1&&this.index++}},{key:"decrement",value:function(){this.index>0&&this.index--}},{key:"addResources",value:function(e){var t=this;if(!e.resources)throw new Error("No resources exist in the data.");var n=[];e.resources.forEach(function(e){if(!e.type)throw new Error("All items must have a type.");if(!e.id)throw new Error("All items must have an id.");switch(e.options||(e.options={}),e.options.id=e.id,e.type){case"background":n.push(t.createBackground(e.options));break;case"heading":n.push(t.createHeading(e.text,e.options));break;case"blurb":n.push(t.createBlurb(e.text,e.options));break;case"image":n.push(t.createImage(e.src,e.options));break;default:return}}),e.actions.forEach(function(e){for(var o in e)e.hasOwnProperty(o)&&function(){var r={};r[o]=[],e[o].forEach(function(e){for(var t=0;t<n.length;t++){var i=n[t];if(i.id==e){r[o].push(i);break}}}),t.addActions(r)}()})}}])&&h(t.prototype,n),o&&h(t,o),e}();return o.Impresi=e,e}()},"object"===b(t)&&void 0!==e?e.exports=u():void 0===(i="function"==typeof(r=u)?r.call(t,n,t,e):r)||(e.exports=i)}).call(this,n(4))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=f(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t,n,o){return(s="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(e,t,n,o){var r,i=f(e,t);if(i){if((r=Object.getOwnPropertyDescriptor(i,t)).set)return r.set.call(o,n),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(o,t)){if(!r.writable)return!1;r.value=n,Object.defineProperty(o,t,r)}else!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(o,t,n);return!0})(e,t,n,o)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){function t(e){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,o)),function(e,t,n,o,r){if(!s(e,t,n,o||e)&&r)throw new Error("failed to set property")}(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"defaultInAnimationName","fadeIn",n),n.addElement("div"),n}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){if(c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.classList.add("background","item"),this.options.imageUrl){var n=document.createElement("img");n.src=this.options.imageUrl,this.element.appendChild(n)}else this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=d,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,r))).text=n,o.zIndex=1,o.defaultFontSize=2,o.addElement("div"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.classList.add("heading","item");var n=document.createElement("h1");this.element.style.zIndex=this.zIndex,n.innerHTML=this.text,c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,r))).text=n,o.zIndex=2,o.defaultFontSize=1.5,o.addElement("div"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.classList.add("blurb","item"),this.element.style.zIndex=this.zIndex;var n=document.createElement("p");n.innerHTML=this.text,c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.actionName=t,this.actions=n}var t,n,r;return t=e,(n=[{key:"run",value:function(){this.actions.forEach(function(e){e.run(),0})}},{key:"stop",value:function(){this.actions.forEach(function(e){e.stop(),0})}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=r,e.exports=t.default},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.item=t,this.inAnimationName=null!=this.item.options.inAnimationName?t.options.inAnimationName:"fadeIn",this.outAnimationName=null!=t.options.outAnimationName?t.options.outAnimationName:"fadeOut"}var t,n,r;return t=e,(n=[{key:"run",value:function(){this.item.element.classList.remove("hide"),this.item.element.classList.remove(this.outAnimationName),this.item.element.classList.add("animated",this.inAnimationName)}},{key:"stop",value:function(){this.item.element.classList.remove("animated",this.inAnimationName),this.item.element.classList.add(this.outAnimationName),this.item.element.classList.add("hide")}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=r,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(2))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e,t,n){return(c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=f(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t,n,o){return(s="undefined"!=typeof Reflect&&Reflect.set?Reflect.set:function(e,t,n,o){var r,i=f(e,t);if(i){if((r=Object.getOwnPropertyDescriptor(i,t)).set)return r.set.call(o,n),!0;if(!r.writable)return!1}if(r=Object.getOwnPropertyDescriptor(o,t)){if(!r.writable)return!1;r.value=n,Object.defineProperty(o,t,r)}else!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(o,t,n);return!0})(e,t,n,o)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){function t(e,n,o){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,o)),function(e,t,n,o,r){if(!s(e,t,n,o||e)&&r)throw new Error("failed to set property")}(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"defaultInAnimationName","slideInUp",r),r.src=n,r.zIndex=1,r.addElement("img"),r}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){c(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.options.width&&(this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.style.overflow="hidden"),this.element.classList.add("image","item"),this.element.style.zIndex=this.zIndex,this.element.src=this.src}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=d,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styles=void 0;t.styles='\nbody {\n  margin: 0;\n  text-align: center;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nh1,\np {\n  font-family: "Montserrat", sans-serif;\n}\n\n.item {\n  visibility: hidden;\n}\n\n.animated {\n  visibility: visible;\n}\n\n.hide {\n  display: none;\n}\n\n.background {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n}\n\n.background img {\n  flex-shrink: 0;\n  min-width: 100%;\n  min-height: 100%;\n}\n\n.heading,\n.blurb,\n.background,\n.image {\n  position: absolute;\n  background-color: #333;\n}\n\n.heading,\n.blurb {\n  padding: 15px;\n}\n\n.heading h1 {\n  font-size: 2.4em;\n}\n\n.blurb p {\n  font-size: 1.4em;\n}\n\n.heading h1,\n.blurb p {\n  margin: 0;\n  color: #fff;\n}\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background-color: #333;\n  width: 100vw;\n  height: 100vh;\n}\n\n.lds-ripple {\n  display: inline-block;\n  position: fixed;\n  top: 40vh;\n  left: calc(50vw - 32px);\n  width: 64px;\n  height: 64px;\n}\n.lds-ripple div {\n  position: absolute;\n  border: 4px solid #fff;\n  opacity: 1;\n  border-radius: 50%;\n  animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n}\n.lds-ripple div:nth-child(2) {\n  animation-delay: -0.5s;\n}\n@keyframes lds-ripple {\n  0% {\n    top: 28px;\n    left: 28px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: -1px;\n    left: -1px;\n    width: 58px;\n    height: 58px;\n    opacity: 0;\n  }\n}\n\n\n@media only screen and (max-width: 600px) {\n  .heading:not(.hide),\n  .blurb:not(.hide),\n  .image:not(.hide){\n    position: static;\n    display: block;\n  }\n\n  .image:not(.hide) {\n    width: 100vw;\n    max-width: 100vw !important;\n  }\n\n  .heading:not(.hide) h1 {\n    font-size: 5vw;\n  }\n\n  .blurb p {\n    font-size: 4vw;\n  }\n}\n'}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,