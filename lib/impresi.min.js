!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("impresi",[],t):"object"==typeof exports?exports.impresi=t():e.impresi=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.board=t.board,this.options=n,this.element=null,n.id&&(this.id=n.id)}var t,n,r;return t=e,(n=[{key:"addElement",value:function(e){this.element=document.createElement(e),this.board.appendChild(this.element)}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=r,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(6))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n))).defaultInAnimationName="slideInUp",o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.options.width&&(this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.style.overflow="hidden"),this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor),this.options.inAnimationName=null!=this.options.inAnimationName?this.options.inAnimationName:this.defaultInAnimationName}},{key:"setChildOptions",value:function(e){e.style.fontSize="".concat(this.getFontSize(),"vw"),this.options.fontColor&&(e.style.color=this.options.fontColor)}},{key:"getFontSize",value:function(){return null!=this.options.fontSize?this.options.fontSize:this.defaultFontSize}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";(function(o){var r,i,u,a=d(n(4)),s=d(n(5)),c=d(n(7)),l=d(n(8)),f=d(n(9)),p=n(10);function d(e){return e&&e.__esModule?e:{default:e}}function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}u=function(){return function(){var e=function(){function e(t,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("ID for board is required");if(this.board=document.querySelector("#"+t),!this.board)throw new Error("No HTML element with the ID: "+t);this.options=o,this.groups=[],this.screenIndex=0,this.index=0,n&&this.addResources(n),this.init()}var t,n,o;return t=e,(n=[{key:"init",value:function(){this.getStyles(),this.setListeners(),this.displayLoader()}},{key:"setListeners",value:function(){var e=this,t=this;document.body.onkeyup=function(n){32!==n.keyCode&&40!==n.keyCode&&39!==n.keyCode&&13!==n.keyCode||e.index<e.groups.length-1&&(t.next(),e.screenIndex++,window.location.hash="screen".concat(e.screenIndex)),38!==n.keyCode&&37!==n.keyCode||e.index>0&&t.previous(t.index===t.groups.length-1)}}},{key:"getStyles",value:function(){var e=document.createElement("style");e.type="text/css",e.innerHTML=p.styles,this.board.appendChild(e),(e=document.createElement("style")).type="text/css",e.innerHTML='@import url("https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css");',this.board.appendChild(e)}},{key:"displayLoader",value:function(){var e=document.createElement("div");e.classList.add("overlay");var t=document.createElement("div");t.innerHTML="<div></div><div></div>",t.classList.add("lds-ripple"),e.appendChild(t),document.body.appendChild(e)}},{key:"createBackground",value:function(e){return new a.default(this,e)}},{key:"createHeading",value:function(e,t){return new s.default(this,e,t)}},{key:"createBlurb",value:function(e,t){return new c.default(this,e,t)}},{key:"addActions",value:function(e){return e.out&&this.addGroup("out",e),e.in&&this.addGroup("in",e),this}},{key:"addGroup",value:function(e,t){var n=[];t[e].forEach(function(e){var t=new f.default(e);n.push(t)});var o=new l.default(e,n);this.groups.push(o)}},{key:"next",value:function(){var e=this.groups[this.index];if("out"===e.actionName){if(!e.actions.length)throw new Error("No actions provided.");e.stop(),this.increment(),this.next()}else e.run(),this.index<this.groups.length-1&&this.increment()}},{key:"previous",value:function(e){if(1!==this.index){e||this.decrement();var t=this.groups[this.index];if("in"===t.actionName){if(!t.actions.length)throw new Error("No actions provided.");t.stop(),e?(this.decrement(),this.previous(!0)):this.previous(this.index===this.groups.length-1)}else t.run(),this.screenIndex--,window.location.hash="screen".concat(this.screenIndex)}}},{key:"start",value:function(){if(!this.groups.length)throw new Error("No groups of actions have been added yet.");if(window.location.hash){var e=window.location.hash;if(e.match("^#screen[0-9]+$")){var t=e.match("[0-9]+");if(t&&(this.screenIndex=parseInt(t[0])),this.screenIndex>0&&this.screenIndex<=this.groups.length/2+1)for(var n=0;n<this.screenIndex;n++)this.next();else this.screenIndex=1,window.location.hash="screen1",this.next()}}else this.next(),this.screenIndex++,window.location.hash="screen1";document.querySelector(".overlay").classList.add("hide")}},{key:"increment",value:function(){this.index!==this.groups.length-1&&this.index++}},{key:"decrement",value:function(){this.index>0&&this.index--}},{key:"addResources",value:function(e){var t=this;if(!e.resources)throw new Error("No resources exist in the data.");var n=[];e.resources.forEach(function(e){if(!e.type)throw new Error("All items must have a type.");if(!e.id)throw new Error("All items must have an id.");switch(e.options||(e.options={}),e.options.id=e.id,e.type){case"background":n.push(t.createBackground(e.options));break;case"heading":n.push(t.createHeading(e.text,e.options));break;case"blurb":n.push(t.createBlurb(e.text,e.options));break;default:return}}),e.actions.forEach(function(e){for(var o in e)e.hasOwnProperty(o)&&function(){var r={};r[o]=[],e[o].forEach(function(e){for(var t=0;t<n.length;t++){var i=n[t];if(i.id==e){r[o].push(i);break}}}),t.addActions(r)}()})}}])&&h(t.prototype,n),o&&h(t,o),e}();return o.Impresi=e,e}()},"object"===y(t)&&void 0!==e?e.exports=u():void 0===(i="function"==typeof(r=u)?r.call(t,n,t,e):r)||(e.exports=i)}).call(this,n(3))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e){var n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,o))).addElement("div"),n}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){if(s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.classList.add("background","item"),this.options.imageUrl){var n=document.createElement("img");n.src=this.options.imageUrl,this.element.appendChild(n)}else this.options.backgroundColor&&(this.element.style.backgroundColor=this.options.backgroundColor)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,r))).text=n,o.zIndex=1,o.defaultFontSize=2,o.addElement("span"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.classList.add("heading","item");var n=document.createElement("h1");this.element.style.zIndex=this.zIndex,n.innerHTML=this.text,s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(0))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,n)),n.x||(o.options.x="10"),n.y||(o.options.y="10"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.style.left="".concat(this.options.x,"vw"),this.element.style.top="".concat(this.options.y,"vh")}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o,r=(o=n(1))&&o.__esModule?o:{default:o};function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t){return!t||"object"!==i(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=function(e){function t(e,n){var o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,r))).text=n,o.zIndex=2,o.defaultFontSize=1.5,o.addElement("div"),o}var n,o,i;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.default),n=t,(o=[{key:"addElement",value:function(e){s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"addElement",this).call(this,e),this.element.style.maxWidth="".concat(this.options.width,"vw"),this.element.classList.add("blurb","item"),this.element.style.zIndex=this.zIndex;var n=document.createElement("p");n.innerHTML=this.text,s(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setChildOptions",this).call(this,n),this.element.appendChild(n)}}])&&u(n.prototype,o),i&&u(n,i),t}();t.default=f,e.exports=t.default},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.actionName=t,this.actions=n}var t,n,r;return t=e,(n=[{key:"run",value:function(){this.actions.forEach(function(e){e.run(),0})}},{key:"stop",value:function(){this.actions.forEach(function(e){e.stop(),0})}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=r,e.exports=t.default},function(e,t,n){"use strict";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.item=t,this.defaul,this.inAnimationName=null!=this.item.options.inAnimationName?t.options.inAnimationName:"fadeIn",this.outAnimationName=null!=t.options.outAnimationName?t.options.outAnimationName:"fadeOut"}var t,n,r;return t=e,(n=[{key:"run",value:function(){this.item.element.classList.remove("hide"),this.item.element.classList.remove(this.outAnimationName),this.item.element.classList.add("animated",this.inAnimationName)}},{key:"stop",value:function(){this.item.element.classList.remove("animated",this.inAnimationName),this.item.element.classList.add(this.outAnimationName),this.item.element.classList.add("hide")}}])&&o(t.prototype,n),r&&o(t,r),e}();t.default=r,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styles=void 0;t.styles='\nbody {\n  margin: 0;\n  text-align: center;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nh1,\np {\n  font-family: "Montserrat", sans-serif;\n}\n\n.item {\n  visibility: hidden;\n}\n\n.animated {\n  visibility: visible;\n}\n\n.hide {\n  display: none;\n}\n\n.background {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n}\n\n.background img {\n  flex-shrink: 0;\n  min-width: 100%;\n  min-height: 100%;\n}\n\n.heading,\n.blurb,\n.background {\n  position: absolute;\n  background-color: #333;\n}\n\n.heading,\n.blurb {\n  padding: 15px;\n}\n\n.heading h1 {\n  font-size: 2.4em;\n}\n\n.blurb p {\n  font-size: 1.4em;\n}\n\n.heading h1,\n.blurb p {\n  margin: 0;\n  color: #fff;\n}\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background-color: #333;\n  width: 100vw;\n  height: 100vh;\n}\n\n.lds-ripple {\n  display: inline-block;\n  position: fixed;\n  top: 40vh;\n  left: calc(50vw - 32px);\n  width: 64px;\n  height: 64px;\n}\n.lds-ripple div {\n  position: absolute;\n  border: 4px solid #fff;\n  opacity: 1;\n  border-radius: 50%;\n  animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n}\n.lds-ripple div:nth-child(2) {\n  animation-delay: -0.5s;\n}\n@keyframes lds-ripple {\n  0% {\n    top: 28px;\n    left: 28px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: -1px;\n    left: -1px;\n    width: 58px;\n    height: 58px;\n    opacity: 0;\n  }\n}\n\n\n@media only screen and (max-width: 600px) {\n  .heading,\n  .blurb {\n    position: static;\n    display: block;\n  }\n\n  .heading h1 {\n    font-size: 5vw;\n  }\n\n  .blurb p {\n    font-size: 4vw;\n  }\n}\n'}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbXByZXNpL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9pbXByZXNpL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2ltcHJlc2kvLi9zcmMvbGliL2l0ZW0uanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8uL3NyYy9saWIvdGV4dC1pdGVtLmpzIiwid2VicGFjazovL2ltcHJlc2kvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8uL3NyYy9saWIvYmFja2dyb3VuZC5qcyIsIndlYnBhY2s6Ly9pbXByZXNpLy4vc3JjL2xpYi9oZWFkaW5nLmpzIiwid2VicGFjazovL2ltcHJlc2kvLi9zcmMvbGliL2Fic29sdXRlLWl0ZW0uanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8uL3NyYy9saWIvYmx1cmIuanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8uL3NyYy9saWIvZ3JvdXAuanMiLCJ3ZWJwYWNrOi8vaW1wcmVzaS8uL3NyYy9saWIvYWN0aW9uLmpzIiwid2VicGFjazovL2ltcHJlc2kvLi9zcmMvc3R5bGVzLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJ0aGlzIiwiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIkl0ZW0iLCJpbXByZXNpIiwib3B0aW9ucyIsIl9jbGFzc0NhbGxDaGVjayIsImJvYXJkIiwiZWxlbWVudCIsImlkIiwiZWxlbWVudE5hbWUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsIl9hYnNvbHV0ZUl0ZW0iLCJUZXh0SXRlbSIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsImRlZmF1bHRJbkFuaW1hdGlvbk5hbWUiLCJfZ2V0Iiwid2lkdGgiLCJzdHlsZSIsIm1heFdpZHRoIiwiY29uY2F0Iiwib3ZlcmZsb3ciLCJiYWNrZ3JvdW5kQ29sb3IiLCJpbkFuaW1hdGlvbk5hbWUiLCJ1bmRlZmluZWQiLCJjaGlsZCIsImZvbnRTaXplIiwiZ2V0Rm9udFNpemUiLCJmb250Q29sb3IiLCJjb2xvciIsImRlZmF1bHRGb250U2l6ZSIsIl9iYWNrZ3JvdW5kIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9oZWFkaW5nIiwiX2JsdXJiIiwiX2dyb3VwIiwiX2FjdGlvbiIsIl9zdHlsZXMiLCJJbXByZXNpIiwiYm9hcmRJZCIsImRhdGEiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJFcnJvciIsInF1ZXJ5U2VsZWN0b3IiLCJncm91cHMiLCJzY3JlZW5JbmRleCIsImluZGV4IiwiYWRkUmVzb3VyY2VzIiwiaW5pdCIsImdldFN0eWxlcyIsInNldExpc3RlbmVycyIsImRpc3BsYXlMb2FkZXIiLCJib2R5Iiwib25rZXl1cCIsImUiLCJrZXlDb2RlIiwibmV4dCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaGFzaCIsInByZXZpb3VzIiwic3R5bGVFbCIsInR5cGUiLCJpbm5lckhUTUwiLCJzdHlsZXMiLCJvdmVybGF5IiwiY2xhc3NMaXN0IiwiYWRkIiwibG9hZGVyIiwiZGVmYXVsdCIsInRleHQiLCJvdXQiLCJhZGRHcm91cCIsImluIiwiYWN0aW9uTmFtZSIsImFjdGlvbnMiLCJmb3JFYWNoIiwiaXRlbSIsImFjdGlvbiIsInB1c2giLCJncm91cCIsInN0b3AiLCJpbmNyZW1lbnQiLCJydW4iLCJpc0xhc3QiLCJkZWNyZW1lbnQiLCJmcmFnIiwibWF0Y2giLCJtYXRjaGVzIiwicGFyc2VJbnQiLCJfdGhpczIiLCJyZXNvdXJjZXMiLCJpdGVtcyIsInJlc291cmNlIiwiY3JlYXRlQmFja2dyb3VuZCIsImNyZWF0ZUhlYWRpbmciLCJjcmVhdGVCbHVyYiIsImFjdGlvbnNPYmoiLCJpdGVtSWQiLCJfaSIsImFkZEFjdGlvbnMiLCJnbG9iYWwiLCJfdHlwZW9mIiwiX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18iLCJfX1dFQlBBQ0tfQU1EX0RFRklORV9GQUNUT1JZX18iLCJnIiwiRnVuY3Rpb24iLCJfaXRlbSIsIkJhY2tncm91bmQiLCJhZGRFbGVtZW50IiwiaW1hZ2VVcmwiLCJpbWFnZSIsInNyYyIsIl90ZXh0SXRlbSIsIkhlYWRpbmciLCJ6SW5kZXgiLCJoMSIsIkFic29sdXRlSXRlbSIsIngiLCJ5IiwibGVmdCIsInRvcCIsIkJsdXJiIiwiR3JvdXAiLCJBY3Rpb24iLCJkZWZhdWwiLCJvdXRBbmltYXRpb25OYW1lIiwicmVtb3ZlIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxFQUFBQyxHQUNBLGlCQUFBQyxTQUFBLGlCQUFBQyxPQUNBQSxPQUFBRCxRQUFBRCxJQUNBLG1CQUFBRyxlQUFBQyxJQUNBRCxPQUFBLGFBQUFILEdBQ0EsaUJBQUFDLFFBQ0FBLFFBQUEsUUFBQUQsSUFFQUQsRUFBQSxRQUFBQyxJQVJBLENBU0Msb0JBQUFLLFVBQUFDLEtBQUEsV0FDRCxtQkNUQSxJQUFBQyxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFSLFFBR0EsSUFBQUMsRUFBQUssRUFBQUUsR0FBQSxDQUNBQyxFQUFBRCxFQUNBRSxHQUFBLEVBQ0FWLFFBQUEsSUFVQSxPQU5B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akIsU0FBQUEsRUFBWWpELEVBQVlDLGdHQUFTM0UsQ0FBQXZDLEtBQUFrSyxHQUMvQmxLLEtBQUtpSCxXQUFhQSxFQUNsQmpILEtBQUtrSCxRQUFVQSx1REFLZmxILEtBQUtrSCxRQUFRQyxRQUFRLFNBQUFFLEdBQ25CQSxFQUFPSyxNQUNQdEgsbUNBTUZKLEtBQUtrSCxRQUFRQyxRQUFRLFNBQUFFLEdBQ25CQSxFQUFPRyxPQUNQcEgsbVZDbEJhK0osYUFDakIsU0FBQUEsRUFBWS9DLGdHQUFNN0UsQ0FBQXZDLEtBQUFtSyxHQUNoQm5LLEtBQUtvSCxLQUFPQSxFQUNacEgsS0FBS29LLE9BQ0xwSyxLQUFLNkQsZ0JBQ2tDQyxNQUFyQzlELEtBQUtvSCxLQUFLOUUsUUFBUXVCLGdCQUNkdUQsRUFBSzlFLFFBQVF1QixnQkFDYixTQUNON0QsS0FBS3FLLGlCQUM4QnZHLE1BQWpDc0QsRUFBSzlFLFFBQVErSCxpQkFDVGpELEVBQUs5RSxRQUFRK0gsaUJBQ2IsK0RBSU5ySyxLQUFLb0gsS0FBSzNFLFFBQVFnRSxVQUFVNkQsT0FBTyxRQUNuQ3RLLEtBQUtvSCxLQUFLM0UsUUFBUWdFLFVBQVU2RCxPQUFPdEssS0FBS3FLLGtCQUN4Q3JLLEtBQUtvSCxLQUFLM0UsUUFBUWdFLFVBQVVDLElBQUksV0FBWTFHLEtBQUs2RCxnREFJakQ3RCxLQUFLb0gsS0FBSzNFLFFBQVFnRSxVQUFVNkQsT0FBTyxXQUFZdEssS0FBSzZELGlCQUNwRDdELEtBQUtvSCxLQUFLM0UsUUFBUWdFLFVBQVVDLElBQUkxRyxLQUFLcUssa0JBQ3JDckssS0FBS29ILEtBQUszRSxRQUFRZ0UsVUFBVUMsSUFBSSxxTEN2Qm5CIiwiZmlsZSI6ImltcHJlc2kubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJpbXByZXNpXCIsIFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcImltcHJlc2lcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiaW1wcmVzaVwiXSA9IGZhY3RvcnkoKTtcbn0pKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMik7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBJdGVtIHtcbiAgICBjb25zdHJ1Y3RvcihpbXByZXNpLCBvcHRpb25zKSB7XG4gICAgICB0aGlzLmJvYXJkID0gaW1wcmVzaS5ib2FyZDtcbiAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xuICAgICAgLy9yZXNvdXJjZXMgY3JlYXRlZCB0aHJvdWdoIEpTT04gZGF0YSBwcm92aWRlIGFuIElEIHRocm91Z2ggdGhlIG9wdGlvbnNcbiAgICAgIGlmIChvcHRpb25zLmlkKSB7XG4gICAgICAgIHRoaXMuaWQgPSBvcHRpb25zLmlkO1xuICAgICAgfVxuICAgIH1cblxuICAgIGFkZEVsZW1lbnQoZWxlbWVudE5hbWUpIHtcbiAgICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbWVudE5hbWUpO1xuICAgICAgdGhpcy5ib2FyZC5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICAiLCJpbXBvcnQgQWJzb2x1dGVJdGVtIGZyb20gXCIuL2Fic29sdXRlLWl0ZW1cIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHRJdGVtIGV4dGVuZHMgQWJzb2x1dGVJdGVtIHtcbiAgICBjb25zdHJ1Y3RvcihpbXByZXNpLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGltcHJlc2ksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmRlZmF1bHRJbkFuaW1hdGlvbk5hbWUgPSBcInNsaWRlSW5VcFwiO1xuXG4gICAgfVxuXG4gICAgYWRkRWxlbWVudChlbGVtZW50TmFtZSkge1xuICAgICAgICBzdXBlci5hZGRFbGVtZW50KGVsZW1lbnROYW1lKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy53aWR0aCkge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnN0eWxlLm1heFdpZHRoID0gYCR7dGhpcy5vcHRpb25zLndpZHRofXZ3YDtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IpIHtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLm9wdGlvbnMuYmFja2dyb3VuZENvbG9yO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3B0aW9ucy5pbkFuaW1hdGlvbk5hbWUgPSB0aGlzLm9wdGlvbnMuaW5BbmltYXRpb25OYW1lICE9IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyB0aGlzLm9wdGlvbnMuaW5BbmltYXRpb25OYW1lIDogdGhpcy5kZWZhdWx0SW5BbmltYXRpb25OYW1lO1xuICAgIH1cblxuICAgIHNldENoaWxkT3B0aW9ucyhjaGlsZCkge1xuICAgICAgICAvLyBpZiAodGhpcy5vcHRpb25zLmZvbnRTaXplKSB7XG4gICAgICAgICAgICBjaGlsZC5zdHlsZS5mb250U2l6ZSA9IGAke3RoaXMuZ2V0Rm9udFNpemUoKX12d2A7XG4gICAgICAgIC8vIH1cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5mb250Q29sb3IpIHtcbiAgICAgICAgICAgIGNoaWxkLnN0eWxlLmNvbG9yID0gdGhpcy5vcHRpb25zLmZvbnRDb2xvcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldEZvbnRTaXplKCl7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuZm9udFNpemUgIT0gdW5kZWZpbmVkXG4gICAgICAgID8gdGhpcy5vcHRpb25zLmZvbnRTaXplIDogdGhpcy5kZWZhdWx0Rm9udFNpemU7XG4gICAgICB9XG59IiwiLyoqIVxuICogQGZpbGVPdmVydmlldyBBIEphdmFzY3JpcHQgbGlicmFyeSBmb3IgY3JlYXRpbmcgYmVhdXRpZnVsIHNsaWRlIHByZXNlbnRhdGlvbnMuXG4gKiBAdmVyc2lvbiAwLjAuM1xuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOSBSaWNoYXJkIExvdmVsbCBhbmQgY29udHJpYnV0b3JzXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgJ1NvZnR3YXJlJyksIHRvIGRlYWxcbiAqIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbiAqIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuICogZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAqXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbiAqIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICdBUyBJUycsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbiAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gKiBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4gKiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbiAqIFNPRlRXQVJFLlxuICovXG5cbmltcG9ydCBCYWNrZ3JvdW5kIGZyb20gJy4vbGliL2JhY2tncm91bmQnO1xuaW1wb3J0IEhlYWRpbmcgZnJvbSAnLi9saWIvaGVhZGluZyc7XG5pbXBvcnQgQmx1cmIgZnJvbSAnLi9saWIvYmx1cmInO1xuaW1wb3J0IEdyb3VwIGZyb20gJy4vbGliL2dyb3VwJztcbmltcG9ydCBBY3Rpb24gZnJvbSAnLi9saWIvYWN0aW9uJztcbmltcG9ydCB7IHN0eWxlcyB9IGZyb20gJy4vc3R5bGVzJztcblxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCkgOlxuICAgIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShmYWN0b3J5KSA6XG4gICAgICAoZ2xvYmFsLkltcHJlc2kgPSBmYWN0b3J5KCkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG5cblxuICAgdmFyIEltcHJlc2kgPSBmdW5jdGlvbiAoKSB7XG4gIGNsYXNzIEltcHJlc2kge1xuICAgIGNvbnN0cnVjdG9yKGJvYXJkSWQsIGRhdGEsIG9wdGlvbnMgPSBbXSkge1xuICAgICAgaWYgKCFib2FyZElkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSUQgZm9yIGJvYXJkIGlzIHJlcXVpcmVkJyk7XG4gICAgICB9XG4gICAgICB0aGlzLmJvYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycgKyBib2FyZElkKTtcbiAgICAgIGlmICghdGhpcy5ib2FyZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIEhUTUwgZWxlbWVudCB3aXRoIHRoZSBJRDogJyArIGJvYXJkSWQpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgdGhpcy5ncm91cHMgPSBbXTtcbiAgICAgIHRoaXMuc2NyZWVuSW5kZXggPSAwO1xuICAgICAgdGhpcy5pbmRleCA9IDA7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICB0aGlzLmFkZFJlc291cmNlcyhkYXRhKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICB0aGlzLmdldFN0eWxlcygpO1xuICAgICAgdGhpcy5zZXRMaXN0ZW5lcnMoKTtcbiAgICAgIHRoaXMuZGlzcGxheUxvYWRlcigpO1xuICAgIH1cblxuICAgIHNldExpc3RlbmVycygpIHtcbiAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgIGRvY3VtZW50LmJvZHkub25rZXl1cCA9IGUgPT4ge1xuICAgICAgICAvL2luY3JlbWVudCBrZXlzOiBzcGFjZSwgZG93biwgcmlnaHQgb3IgZW50ZXJcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGUua2V5Q29kZSA9PT0gMzIgfHxcbiAgICAgICAgICBlLmtleUNvZGUgPT09IDQwIHx8XG4gICAgICAgICAgZS5rZXlDb2RlID09PSAzOSB8fFxuICAgICAgICAgIGUua2V5Q29kZSA9PT0gMTNcbiAgICAgICAgKSB7XG5cbiAgICAgICAgICBpZiAodGhpcy5pbmRleCA8IHRoaXMuZ3JvdXBzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIHNlbGYubmV4dCgpO1xuICAgICAgICAgICAgdGhpcy5zY3JlZW5JbmRleCsrO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBgc2NyZWVuJHt0aGlzLnNjcmVlbkluZGV4fWA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vZGVjcmVtZW50IGtleXM6IHVwIG9yIGxlZnRcbiAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMzggfHwgZS5rZXlDb2RlID09PSAzNykge1xuICAgICAgICAgIGlmICh0aGlzLmluZGV4ID4gMCkge1xuICAgICAgICAgICAgc2VsZi5wcmV2aW91cyhzZWxmLmluZGV4ID09PSBzZWxmLmdyb3Vwcy5sZW5ndGggLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgZ2V0U3R5bGVzKCkge1xuICAgICAgLy9jb3JlIHN0eWxlc1xuICAgICAgbGV0IHN0eWxlRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVFbC50eXBlID0gJ3RleHQvY3NzJztcbiAgICAgIHN0eWxlRWwuaW5uZXJIVE1MID0gc3R5bGVzO1xuICAgICAgdGhpcy5ib2FyZC5hcHBlbmRDaGlsZChzdHlsZUVsKTtcblxuICAgICAgLy9hbmltYXRpb24gc3R5bGVzXG4gICAgICBzdHlsZUVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgIHN0eWxlRWwudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZUVsLmlubmVySFRNTCA9XG4gICAgICAgICdAaW1wb3J0IHVybChcImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2FuaW1hdGUuY3NzLzMuNy4wL2FuaW1hdGUubWluLmNzc1wiKTsnO1xuICAgICAgdGhpcy5ib2FyZC5hcHBlbmRDaGlsZChzdHlsZUVsKTtcbiAgICB9XG5cbiAgICBkaXNwbGF5TG9hZGVyKCkge1xuICAgICAgbGV0IG92ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheScpO1xuICAgICAgbGV0IGxvYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgbG9hZGVyLmlubmVySFRNTCA9ICc8ZGl2PjwvZGl2PjxkaXY+PC9kaXY+JztcbiAgICAgIGxvYWRlci5jbGFzc0xpc3QuYWRkKCdsZHMtcmlwcGxlJyk7XG4gICAgICBvdmVybGF5LmFwcGVuZENoaWxkKGxvYWRlcik7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG92ZXJsYXkpO1xuICAgIH1cblxuICAgIGNyZWF0ZUJhY2tncm91bmQob3B0aW9ucykge1xuICAgICAgcmV0dXJuIG5ldyBCYWNrZ3JvdW5kKHRoaXMsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGNyZWF0ZUhlYWRpbmcodGV4dCwgb3B0aW9ucykge1xuICAgICAgcmV0dXJuIG5ldyBIZWFkaW5nKHRoaXMsIHRleHQsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGNyZWF0ZUJsdXJiKHRleHQsIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiBuZXcgQmx1cmIodGhpcywgdGV4dCwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgYWRkQWN0aW9ucyhvcHRpb25zKSB7XG4gICAgICBpZiAob3B0aW9ucy5vdXQpIHtcbiAgICAgICAgdGhpcy5hZGRHcm91cCgnb3V0Jywgb3B0aW9ucyk7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy5pbikge1xuICAgICAgICB0aGlzLmFkZEdyb3VwKCdpbicsIG9wdGlvbnMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgYWRkR3JvdXAoYWN0aW9uTmFtZSwgb3B0aW9ucykge1xuICAgICAgbGV0IGFjdGlvbnMgPSBbXTtcbiAgICAgIG9wdGlvbnNbYWN0aW9uTmFtZV0uZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgbGV0IGFjdGlvbiA9IG5ldyBBY3Rpb24oaXRlbSk7XG4gICAgICAgIGFjdGlvbnMucHVzaChhY3Rpb24pO1xuICAgICAgfSk7XG4gICAgICBsZXQgZ3JvdXAgPSBuZXcgR3JvdXAoYWN0aW9uTmFtZSwgYWN0aW9ucyk7XG4gICAgICB0aGlzLmdyb3Vwcy5wdXNoKGdyb3VwKTtcbiAgICB9XG5cbiAgICBuZXh0KCkge1xuICAgICAgbGV0IGdyb3VwID0gdGhpcy5ncm91cHNbdGhpcy5pbmRleF07XG4gICAgICBpZiAoZ3JvdXAuYWN0aW9uTmFtZSA9PT0gJ291dCcpIHtcbiAgICAgICAgaWYgKCFncm91cC5hY3Rpb25zLmxlbmd0aCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYWN0aW9ucyBwcm92aWRlZC4nKTtcbiAgICAgICAgfVxuICAgICAgICBncm91cC5zdG9wKCk7XG4gICAgICAgIHRoaXMuaW5jcmVtZW50KCk7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZ3JvdXAucnVuKCk7XG4gICAgICAgIGlmICh0aGlzLmluZGV4IDwgdGhpcy5ncm91cHMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIHRoaXMuaW5jcmVtZW50KCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cblxuICAgIHByZXZpb3VzKGlzTGFzdCkge1xuICAgICAgaWYgKHRoaXMuaW5kZXggIT09IDEpIHtcbiAgICAgICAgaWYgKCFpc0xhc3QpIHtcbiAgICAgICAgICB0aGlzLmRlY3JlbWVudCgpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBncm91cCA9IHRoaXMuZ3JvdXBzW3RoaXMuaW5kZXhdO1xuICAgICAgICBpZiAoZ3JvdXAuYWN0aW9uTmFtZSA9PT0gJ2luJykge1xuICAgICAgICAgIGlmICghZ3JvdXAuYWN0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYWN0aW9ucyBwcm92aWRlZC4nKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZ3JvdXAuc3RvcCgpO1xuICAgICAgICAgIGlmIChpc0xhc3QpIHtcbiAgICAgICAgICAgIHRoaXMuZGVjcmVtZW50KCk7XG4gICAgICAgICAgICB0aGlzLnByZXZpb3VzKHRydWUpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByZXZpb3VzKHRoaXMuaW5kZXggPT09IHRoaXMuZ3JvdXBzLmxlbmd0aCAtIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBncm91cC5ydW4oKTtcbiAgICAgICAgICB0aGlzLnNjcmVlbkluZGV4LS07XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBgc2NyZWVuJHt0aGlzLnNjcmVlbkluZGV4fWA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgIGlmICghdGhpcy5ncm91cHMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gZ3JvdXBzIG9mIGFjdGlvbnMgaGF2ZSBiZWVuIGFkZGVkIHlldC4nKTtcbiAgICAgIH1cbiAgICAgIGlmICh3aW5kb3cubG9jYXRpb24uaGFzaCkge1xuICAgICAgICAvLyBGcmFnbWVudCBleGlzdHNcbiAgICAgICAgbGV0IGZyYWcgPSB3aW5kb3cubG9jYXRpb24uaGFzaDtcbiAgICAgICAgaWYgKGZyYWcubWF0Y2goJ14jc2NyZWVuWzAtOV0rJCcpKSB7XG4gICAgICAgICAgdmFyIG1hdGNoZXMgPSBmcmFnLm1hdGNoKCdbMC05XSsnKTtcbiAgICAgICAgICBpZiAobWF0Y2hlcykge1xuICAgICAgICAgICAgdGhpcy5zY3JlZW5JbmRleCA9IHBhcnNlSW50KG1hdGNoZXNbMF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodGhpcy5zY3JlZW5JbmRleCA+IDAgJiYgdGhpcy5zY3JlZW5JbmRleCA8PSB0aGlzLmdyb3Vwcy5sZW5ndGggLyAyICsgMSkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNjcmVlbkluZGV4OyBpKyspIHtcbiAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2NyZWVuSW5kZXggPSAxO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnc2NyZWVuMSc7XG4gICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgIHRoaXMuc2NyZWVuSW5kZXgrKztcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnc2NyZWVuMSc7XG4gICAgICB9XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3ZlcmxheScpLmNsYXNzTGlzdC5hZGQoJ2hpZGUnKTtcbiAgICB9XG5cbiAgICBpbmNyZW1lbnQoKSB7XG4gICAgICBpZiAodGhpcy5pbmRleCAhPT0gdGhpcy5ncm91cHMubGVuZ3RoIC0gMSkge1xuICAgICAgICB0aGlzLmluZGV4Kys7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGVjcmVtZW50KCkge1xuICAgICAgaWYgKHRoaXMuaW5kZXggPiAwKSB7XG4gICAgICAgIHRoaXMuaW5kZXgtLTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRSZXNvdXJjZXMoZGF0YSkge1xuICAgICAgaWYgKCFkYXRhLnJlc291cmNlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHJlc291cmNlcyBleGlzdCBpbiB0aGUgZGF0YS4nKTtcbiAgICAgIH1cbiAgICAgIGxldCBpdGVtcyA9IFtdO1xuICAgICAgZGF0YS5yZXNvdXJjZXMuZm9yRWFjaChyZXNvdXJjZSA9PiB7XG4gICAgICAgIGlmICghcmVzb3VyY2UudHlwZSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQWxsIGl0ZW1zIG11c3QgaGF2ZSBhIHR5cGUuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFyZXNvdXJjZS5pZCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQWxsIGl0ZW1zIG11c3QgaGF2ZSBhbiBpZC4nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlc291cmNlLm9wdGlvbnMpIHtcbiAgICAgICAgICByZXNvdXJjZS5vcHRpb25zID0ge307XG4gICAgICAgIH1cbiAgICAgICAgcmVzb3VyY2Uub3B0aW9ucy5pZCA9IHJlc291cmNlLmlkO1xuICAgICAgICBzd2l0Y2ggKHJlc291cmNlLnR5cGUpIHtcbiAgICAgICAgICBjYXNlICdiYWNrZ3JvdW5kJzpcbiAgICAgICAgICAgIGl0ZW1zLnB1c2godGhpcy5jcmVhdGVCYWNrZ3JvdW5kKHJlc291cmNlLm9wdGlvbnMpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ2hlYWRpbmcnOlxuICAgICAgICAgICAgaXRlbXMucHVzaCh0aGlzLmNyZWF0ZUhlYWRpbmcocmVzb3VyY2UudGV4dCwgcmVzb3VyY2Uub3B0aW9ucykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnYmx1cmInOlxuICAgICAgICAgICAgaXRlbXMucHVzaCh0aGlzLmNyZWF0ZUJsdXJiKHJlc291cmNlLnRleHQsIHJlc291cmNlLm9wdGlvbnMpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgbGV0IGFjdGlvbnMgPSBkYXRhLmFjdGlvbnM7XG4gICAgICBhY3Rpb25zLmZvckVhY2goYWN0aW9uID0+IHtcbiAgICAgICAgZm9yICh2YXIga2V5IGluIGFjdGlvbikge1xuICAgICAgICAgIGlmIChhY3Rpb24uaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgbGV0IGFjdGlvbnNPYmogPSB7fTtcbiAgICAgICAgICAgIGFjdGlvbnNPYmpba2V5XSA9IFtdO1xuICAgICAgICAgICAgbGV0IGl0ZW1JZHMgPSBhY3Rpb25ba2V5XTtcbiAgICAgICAgICAgIGl0ZW1JZHMuZm9yRWFjaChpdGVtSWQgPT4ge1xuICAgICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIGl0ZW1zKSB7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0uaWQgPT0gaXRlbUlkKSB7XG4gICAgICAgICAgICAgICAgICBhY3Rpb25zT2JqW2tleV0ucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmFkZEFjdGlvbnMoYWN0aW9uc09iaik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgZ2xvYmFsLkltcHJlc2kgPSBJbXByZXNpO1xuICByZXR1cm4gSW1wcmVzaTtcbiAgIH0oKTtcblxuICAgcmV0dXJuIEltcHJlc2k7XG5cbn0pKSk7IiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiaW1wb3J0IEl0ZW0gZnJvbSBcIi4vaXRlbVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFja2dyb3VuZCBleHRlbmRzIEl0ZW0ge1xuICBjb25zdHJ1Y3RvcihpbXByZXNpLCBvcHRpb25zID0ge30pIHtcbiAgICBzdXBlcihpbXByZXNpLCBvcHRpb25zKTtcbiAgICB0aGlzLmFkZEVsZW1lbnQoXCJkaXZcIik7XG4gIH1cblxuICBhZGRFbGVtZW50KGVsZW1lbnROYW1lKSB7XG4gICAgc3VwZXIuYWRkRWxlbWVudChlbGVtZW50TmFtZSk7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJiYWNrZ3JvdW5kXCIsIFwiaXRlbVwiKTtcbiAgICBpZiAodGhpcy5vcHRpb25zLmltYWdlVXJsKSB7XG4gICAgICBsZXQgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgICAgaW1hZ2Uuc3JjID0gdGhpcy5vcHRpb25zLmltYWdlVXJsO1xuICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGltYWdlKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IpIHtcbiAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLm9wdGlvbnMuYmFja2dyb3VuZENvbG9yO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IFRleHRJdGVtIGZyb20gXCIuL3RleHQtaXRlbS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVhZGluZyBleHRlbmRzIFRleHRJdGVtIHtcbiAgY29uc3RydWN0b3IoaW1wcmVzaSwgdGV4dCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIoaW1wcmVzaSwgb3B0aW9ucyk7XG4gICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICB0aGlzLnpJbmRleCA9IDE7XG4gICAgdGhpcy5kZWZhdWx0Rm9udFNpemUgPSAyO1xuICAgIHRoaXMuYWRkRWxlbWVudChcInNwYW5cIik7XG4gIH1cblxuICBhZGRFbGVtZW50KGVsZW1lbnROYW1lKSB7XG4gICAgc3VwZXIuYWRkRWxlbWVudChlbGVtZW50TmFtZSk7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJoZWFkaW5nXCIsIFwiaXRlbVwiKTtcbiAgICB2YXIgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLnpJbmRleCA9IHRoaXMuekluZGV4O1xuICAgIGgxLmlubmVySFRNTCA9IHRoaXMudGV4dDtcbiAgICBzdXBlci5zZXRDaGlsZE9wdGlvbnMoaDEpO1xuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChoMSk7XG4gIH1cblxuXG59XG4iLCJpbXBvcnQgSXRlbSBmcm9tIFwiLi9pdGVtXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBYnNvbHV0ZUl0ZW0gZXh0ZW5kcyBJdGVtIHtcbiAgY29uc3RydWN0b3IoaW1wcmVzaSwgb3B0aW9ucykge1xuICAgIHN1cGVyKGltcHJlc2ksIG9wdGlvbnMpO1xuICAgIGlmICghb3B0aW9ucy54KSB7XG4gICAgICB0aGlzLm9wdGlvbnMueCA9IFwiMTBcIjsgLy9kZWZhdWx0XG4gICAgfVxuICAgIGlmICghb3B0aW9ucy55KSB7XG4gICAgICB0aGlzLm9wdGlvbnMueSA9IFwiMTBcIjsgLy9kZWZhdWx0XG4gICAgfVxuICAgXG4gIH1cblxuICBhZGRFbGVtZW50KGVsZW1lbnROYW1lKSB7XG4gICAgc3VwZXIuYWRkRWxlbWVudChlbGVtZW50TmFtZSlcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IGAke3RoaXMub3B0aW9ucy54fXZ3YDtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUudG9wID0gYCR7dGhpcy5vcHRpb25zLnl9dmhgO1xuICB9XG59XG4iLCJpbXBvcnQgVGV4dEl0ZW0gZnJvbSBcIi4vdGV4dC1pdGVtLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCbHVyYiBleHRlbmRzIFRleHRJdGVtIHtcbiAgY29uc3RydWN0b3IoaW1wcmVzaSwgdGV4dCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIoaW1wcmVzaSwgb3B0aW9ucyk7XG4gICAgdGhpcy50ZXh0ID0gdGV4dDtcbiAgICB0aGlzLnpJbmRleCA9IDI7XG4gICAgdGhpcy5kZWZhdWx0Rm9udFNpemUgPSAxLjU7XG4gICAgdGhpcy5hZGRFbGVtZW50KFwiZGl2XCIpO1xuICB9XG5cbiAgYWRkRWxlbWVudChlbGVtZW50TmFtZSkge1xuICAgIHN1cGVyLmFkZEVsZW1lbnQoZWxlbWVudE5hbWUpO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS5tYXhXaWR0aCA9IGAke3RoaXMub3B0aW9ucy53aWR0aH12d2A7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJibHVyYlwiLCBcIml0ZW1cIik7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLnpJbmRleCA9IHRoaXMuekluZGV4O1xuICAgIHZhciBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgcC5pbm5lckhUTUwgPSB0aGlzLnRleHQ7XG4gICAgc3VwZXIuc2V0Q2hpbGRPcHRpb25zKHApO1xuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChwKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JvdXAge1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbk5hbWUsIGFjdGlvbnMpIHtcbiAgICAgIHRoaXMuYWN0aW9uTmFtZSA9IGFjdGlvbk5hbWU7XG4gICAgICB0aGlzLmFjdGlvbnMgPSBhY3Rpb25zO1xuICAgIH1cbiAgXG4gICAgcnVuKCkge1xuICAgICAgbGV0IGkgPSAwO1xuICAgICAgdGhpcy5hY3Rpb25zLmZvckVhY2goYWN0aW9uID0+IHtcbiAgICAgICAgYWN0aW9uLnJ1bigpO1xuICAgICAgICBpKys7XG4gICAgICB9KTtcbiAgICB9XG4gIFxuICAgIHN0b3AoKSB7XG4gICAgICBsZXQgaSA9IDA7XG4gICAgICB0aGlzLmFjdGlvbnMuZm9yRWFjaChhY3Rpb24gPT4ge1xuICAgICAgICBhY3Rpb24uc3RvcCgpO1xuICAgICAgICBpKys7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWN0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihpdGVtKSB7XG4gICAgICB0aGlzLml0ZW0gPSBpdGVtO1xuICAgICAgdGhpcy5kZWZhdWxcbiAgICAgIHRoaXMuaW5BbmltYXRpb25OYW1lID1cbiAgICAgICAgdGhpcy5pdGVtLm9wdGlvbnMuaW5BbmltYXRpb25OYW1lICE9IHVuZGVmaW5lZFxuICAgICAgICAgID8gaXRlbS5vcHRpb25zLmluQW5pbWF0aW9uTmFtZVxuICAgICAgICAgIDogXCJmYWRlSW5cIjtcbiAgICAgIHRoaXMub3V0QW5pbWF0aW9uTmFtZSA9XG4gICAgICAgIGl0ZW0ub3B0aW9ucy5vdXRBbmltYXRpb25OYW1lICE9IHVuZGVmaW5lZFxuICAgICAgICAgID8gaXRlbS5vcHRpb25zLm91dEFuaW1hdGlvbk5hbWVcbiAgICAgICAgICA6IFwiZmFkZU91dFwiO1xuICAgIH1cbiAgXG4gICAgcnVuKCkge1xuICAgICAgdGhpcy5pdGVtLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XG4gICAgICB0aGlzLml0ZW0uZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3V0QW5pbWF0aW9uTmFtZSk7XG4gICAgICB0aGlzLml0ZW0uZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiYW5pbWF0ZWRcIiwgdGhpcy5pbkFuaW1hdGlvbk5hbWUpO1xuICAgIH1cbiAgXG4gICAgc3RvcCgpIHtcbiAgICAgIHRoaXMuaXRlbS5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJhbmltYXRlZFwiLCB0aGlzLmluQW5pbWF0aW9uTmFtZSk7XG4gICAgICB0aGlzLml0ZW0uZWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMub3V0QW5pbWF0aW9uTmFtZSk7XG4gICAgICB0aGlzLml0ZW0uZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiaGlkZVwiKTtcbiAgICB9XG4gIH1cbiAgIiwiZXhwb3J0IGNvbnN0IHN0eWxlcyA9IFxuYFxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmgxLFxucCB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cblxuLml0ZW0ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5hbmltYXRlZCB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG5cbi5oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmJhY2tncm91bmQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuXG4uYmFja2dyb3VuZCBpbWcge1xuICBmbGV4LXNocmluazogMDtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xufVxuXG4uaGVhZGluZyxcbi5ibHVyYixcbi5iYWNrZ3JvdW5kIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4uaGVhZGluZyxcbi5ibHVyYiB7XG4gIHBhZGRpbmc6IDE1cHg7XG59XG5cbi5oZWFkaW5nIGgxIHtcbiAgZm9udC1zaXplOiAyLjRlbTtcbn1cblxuLmJsdXJiIHAge1xuICBmb250LXNpemU6IDEuNGVtO1xufVxuXG4uaGVhZGluZyBoMSxcbi5ibHVyYiBwIHtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogI2ZmZjtcbn1cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbi5sZHMtcmlwcGxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNDB2aDtcbiAgbGVmdDogY2FsYyg1MHZ3IC0gMzJweCk7XG4gIHdpZHRoOiA2NHB4O1xuICBoZWlnaHQ6IDY0cHg7XG59XG4ubGRzLXJpcHBsZSBkaXYge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlcjogNHB4IHNvbGlkICNmZmY7XG4gIG9wYWNpdHk6IDE7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBsZHMtcmlwcGxlIDFzIGN1YmljLWJlemllcigwLCAwLjIsIDAuOCwgMSkgaW5maW5pdGU7XG59XG4ubGRzLXJpcHBsZSBkaXY6bnRoLWNoaWxkKDIpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC41cztcbn1cbkBrZXlmcmFtZXMgbGRzLXJpcHBsZSB7XG4gIDAlIHtcbiAgICB0b3A6IDI4cHg7XG4gICAgbGVmdDogMjhweDtcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICB0b3A6IC0xcHg7XG4gICAgbGVmdDogLTFweDtcbiAgICB3aWR0aDogNThweDtcbiAgICBoZWlnaHQ6IDU4cHg7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmhlYWRpbmcsXG4gIC5ibHVyYiB7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5oZWFkaW5nIGgxIHtcbiAgICBmb250LXNpemU6IDV2dztcbiAgfVxuXG4gIC5ibHVyYiBwIHtcbiAgICBmb250LXNpemU6IDR2dztcbiAgfVxufVxuYDsiXSwic291cmNlUm9vdCI6IiJ9